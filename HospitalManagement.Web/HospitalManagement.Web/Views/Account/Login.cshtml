@using HospitalManagement.Web.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
}
<section class="content home">
    <div class="container-fluid">
        <div class="block-header">

            <h2>@ViewBag.Title.</h2>
            <div class="row">
                <div class="col-md-8">
                    <section id="loginForm">
                        @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                        {
                            @Html.AntiForgeryToken()
                            <h4>Use a local account to log in.</h4>
                            <h5>UserName : Super , Pass :  abc123</h5>
                            <hr />
                            
                        
                            if(ViewBag.BlockMsg=="Blocked")
                            {
                                <h2>Your account has been blocked</h2>
                            }
                            else if (ViewBag.BlockMsg == "Not")
                            {
                                <h2>Sorry You are Not Assingned to any perfect location</h2>
                                <h2>So you cant Log in Please Contact to A Super Admin in Person</h2>
                            }

                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="input-group">
                                @Html.LabelFor(m => m.UserName, new { @class = "col-md-2 control-label" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="input-group">
                                @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                                <div class="col-md-10">
                                    @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="input-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <div class="checkbox">
                                        @Html.CheckBoxFor(m => m.RememberMe)
                                        @Html.LabelFor(m => m.RememberMe)
                                    </div>
                                </div>
                            </div>
                            <div class="input-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Log in" class="btn btn-default" />
                                </div>
                            </div>

                            @* Enable this once you have account confirmation enabled for password reset functionality
                                <p>
                                    @Html.ActionLink("Forgot your password?", "ForgotPassword")
                                </p>*@
                        }
                    </section>
                </div>
                <div class="col-md-4">
                    <section id="socialLoginForm">
                        @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
                    </section>
                </div>
            </div>
            @section Scripts {
                @Scripts.Render("~/bundles/jqueryval")
            }
            </div>
        </div>
    </section>
